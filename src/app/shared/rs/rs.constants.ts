export enum Skills {
    ATTACK = 0,
    DEFENCE = 1,
    STRENGTH = 2,
    CONSTITUTION = 3,
    RANGED = 4,
    PRAYER = 5,
    MAGIC = 6,
    COOKING = 7,
    WOODCUTTING = 8,
    FLETCHING = 9,
    FISHING = 10,
    FIREMAKING = 11,
    CRAFTING = 12,
    SMITHING = 13,
    MINING = 14,
    HERBLORE = 15,
    AGILITY = 16,
    THIEVING = 17,
    SLAYER = 18,
    FARMING = 19,
    RUNECRAFTING = 20,
    HUNTER = 21,
    CONSTRUCTION = 22,
    SUMMONING = 23,
    DUNGEONEERING = 24,
    DIVINATION = 25,
    INVENTION = 26
}

export const skillNames: string[] = [
    'Attack', 'Defence', 'Strength', 'Constitution', 'Ranged', 'Prayer', 'Magic', 'Cooking',
    'Woodcutting', 'Fletching', 'Fishing', 'Firemaking', 'Crafting', 'Smithing', 'Mining',
    'Herblore', 'Agility', 'Thieving', 'Slayer', 'Farming', 'Runecrafting', 'Hunter',
    'Construction', 'Summoning', 'Dungeoneering', 'Divination', 'Invention'
];

export const skillNamesLower: string[] = skillNames.map(skillName => skillName.toLowerCase());

export const skillOrder: number[] = [
    Skills.ATTACK, Skills.CONSTITUTION, Skills.MINING,
    Skills.STRENGTH, Skills.AGILITY, Skills.SMITHING,
    Skills.DEFENCE, Skills.HERBLORE, Skills.FISHING,
    Skills.RANGED, Skills.THIEVING, Skills.COOKING,
    Skills.PRAYER, Skills.CRAFTING, Skills.FIREMAKING,
    Skills.MAGIC, Skills.FLETCHING, Skills.WOODCUTTING,
    Skills.RUNECRAFTING, Skills.SLAYER, Skills.FARMING,
    Skills.CONSTRUCTION, Skills.HUNTER, Skills.SUMMONING,
    Skills.DUNGEONEERING, Skills.DIVINATION, Skills.INVENTION
];

export const ELITE_XP_TABLE = {
    1: 0,
    2: 830,
    3: 1861,
    4: 2902,
    5: 3980,
    6: 5126,
    7: 6390,
    8: 7787,
    9: 9400,
    10: 11275,
    11: 13605,
    12: 16372,
    13: 19656,
    14: 23546,
    15: 28138,
    16: 33520,
    17: 39809,
    18: 47109,
    19: 55535,
    20: 64802,
    21: 77190,
    22: 90811,
    23: 106221,
    24: 123573,
    25: 143025,
    26: 164742,
    27: 188893,
    28: 215651,
    29: 245196,
    30: 277713,
    31: 316311,
    32: 358547,
    33: 404634,
    34: 454796,
    35: 509259,
    36: 568254,
    37: 632019,
    38: 700797,
    39: 774834,
    40: 854383,
    41: 946227,
    42: 1044569,
    43: 1149696,
    44: 1261903,
    45: 1381488,
    46: 1508756,
    47: 1644015,
    48: 1787581,
    49: 1939773,
    50: 2100917,
    51: 2283490,
    52: 2476369,
    53: 2679907,
    54: 2894505,
    55: 3120508,
    56: 3358307,
    57: 3608290,
    58: 3870846,
    59: 4146374,
    60: 4435275,
    61: 4758122,
    62: 5096111,
    63: 5449685,
    64: 5819299,
    65: 6205407,
    66: 6608473,
    67: 7028964,
    68: 7467354,
    69: 7924122,
    70: 8399751,
    71: 8925664,
    72: 9472665,
    73: 10041285,
    74: 10632061,
    75: 11245538,
    76: 11882262,
    77: 12542789,
    78: 13227679,
    79: 13937496,
    80: 14672812,
    81: 15478994,
    82: 16313404,
    83: 17176661,
    84: 18069395,
    85: 18992239,
    86: 19945833,
    87: 20930821,
    88: 21947856,
    89: 22997593,
    90: 24080695,
    91: 25259906,
    92: 26475754,
    93: 27728955,
    94: 29020233,
    95: 30350318,
    96: 31719944,
    97: 33129852,
    98: 34580790,
    99: 36073511,
    100: 37608773,
    101: 39270442,
    102: 40978509,
    103: 42733789,
    104: 44537107,
    105: 46389292,
    106: 48291180,
    107: 50243611,
    108: 52247435,
    109: 54303504,
    110: 56412678,
    111: 58575823,
    112: 60793812,
    113: 63067521,
    114: 65397835,
    115: 67785643,
    116: 70231841,
    117: 72737330,
    118: 75303019,
    119: 77929820,
    120: 80618654,
    121: 83370445,
    122: 86186124,
    123: 89066630,
    124: 92012904,
    125: 95025896,
    126: 98106559,
    127: 101255855,
    128: 104474750,
    129: 107764216,
    130: 111125230,
    131: 114558777,
    132: 118065845,
    133: 121647430,
    134: 125304532,
    135: 129038159,
    136: 132849323,
    137: 136739041,
    138: 140708338,
    139: 144758242,
    140: 148889790,
    141: 153104021,
    142: 157401983,
    143: 161784728,
    144: 166253312,
    145: 170808801,
    146: 175452262,
    147: 180184770,
    148: 185007406,
    149: 189921255,
    150: 194927409
};

export function getXpRequiredForLevel(level: number, elite: boolean = false): number {
    if(level < 1) {
        return 0;
    }
    
    if(elite) {
        if(level > 150) {
            return 0;
        }
        
        return ELITE_XP_TABLE[ level ];
    } else {
        if(level > 120) {
            return 0;
        }
        
        let a = 0;
        
        for(let i = 1; i < level; i++) {
            a += Math.floor(i + 300 * Math.pow(2, i / 7));
        }
        
        return Math.floor(a / 4);
    }
}
